version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: merch-tool-db
    environment:
      POSTGRES_USER: merchuser
      POSTGRES_PASSWORD: merchpass
      POSTGRES_DB: merch_tool
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - merch-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: merch-tool-redis
    ports:
      - "6379:6379"
    networks:
      - merch-network

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: merch-tool-elastic
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - merch-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: ../infra/Dockerfile.backend
    container_name: merch-tool-backend
    environment:
      - DATABASE_URL=postgresql://merchuser:merchpass@postgres:5432/merch_tool
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - merch-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: ../infra/Dockerfile.frontend
    container_name: merch-tool-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - merch-network
    command: npm run dev

networks:
  merch-network:
    driver: bridge

volumes:
  postgres_data:
  elastic_data:
